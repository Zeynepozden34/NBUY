@using BlogApp.Shared.Utilities.Result.ComplexTypes
@using BlogApp.Entities.Dtos
@model CategoryListDto
@{
    Layout = "_Layout";
    ViewBag.Title = "Kategoriler Anasayfa";
}
@if (Model.ResultStatus == ResultStatus.Success)
{
    @*Kategoriler listelenecek*@
    <div id="modalPlaceHolder" aria-hidden="true"></div>
    <h1 class="mt-4">Admin Kategoriler</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="index.html">Dashboard</a></li>
        <li class="breadcrumb-item active">Kategoriler</li>
    </ol>
    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-table mr-1"></i>
            Kategoriler
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="categoriesTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Ad</th>
                            <th>Açıklama</th>
                            <th>Aktif mi?</th>
                            <th>Silinmiş mi?</th>
                            <th>Not</th>
                            <th>Oluşturulma Tarihi</th>
                            <th>Oluşturan Kullanıcı</th>
                            <th>Son Düzenlenme Tarihi</th>
                            <th>Son Düzenleyen Kullanıcı</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var category in Model.Categories)
                        {
                            <tr>
                                <td>@category.Id</td>
                                <td>@category.Name</td>
                                <td>@category.Description</td>
                                <td>@category.IsActive</td>
                                <td>@category.IsDeleted</td>
                                <td>@category.Note</td>
                                <td>@category.CreatedDate.ToShortDateString()</td>
                                <td>@category.CreatedByName</td>
                                <td>@category.ModifiedDate.ToShortDateString()</td>
                                <td>@category.ModifiedByName</td>
                            </tr>
                        }


                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
@section Scripts{
    <script>
        $(document).ready(function () {
            $('#categoriesTable').DataTable({
                dom: "<'row'<'col-sm-3'l><'col-sm-6 text-center'B><'col-sm-3'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                buttons: [
                    {
                        text: 'Ekle',
                        attr: {
                            id: 'btnAdd'
                        },
                        action: function (e, dt, node, config) {

                        },
                        className: 'btn btn-success'
                    },
                    {
                        text: 'Yenile',
                        action: function (e, dt, node, config) {
                            alert('Yenile butonuna tıklandı.')
                        },
                        className: 'btn btn-warning'
                    }
                ],
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.13.1/i18n/tr.json'
                },

            });
            //Datatable burada bitiyor


            $(function () {
                const url = '@Url.Action("Add","Category")';    //categorycontrolledeki add metotudunu çağırır.
                const placeHolderDiv = $('#modalPlaceHolder'); // modalplaceholder id'li metotu query ile placeholderdiv 'e atar.
                //Ajax ile partial viewimizi ekrana getirdik.
                $('#btnAdd').click(function () { //ekle tıklandığında url'yi getirir(add metotunu)....
                    $.get(url).done(function (data) {
                        placeHolderDiv.html(data);
                        placeHolderDiv.find(".modal").modal('show');
                    });
                });
                //ekrana(GET) getirme bitti

                // Ajax ile POST işlemleri
                placeHolderDiv.on('click', '#btnSave', function () { // placeholderdive click olayı yapılınca btnsave id'li metotda aşağıdaki function çalşacak.
                    event.preventDefault(); //nesnelerin defalut davranış ortadan kaldrır. form submit ise refresh yapar.
                    const form = $('#form-category-add'); //add-partialmızıda bulunan form-category-add adlı id'i jquery ile form nesnesine atadık.
                    const actionUrl = form.attr('action') // formun action isimli attributenu actionUrl'e vermesii istedim.
                    const dataToSend = form.serialize();  // formu serilize edip datatoSend'e ekledik.                  
                    $.post(actionUrl, dataToSend).done(function (data) //jqueryde post etme actionUrldekini dataToSende yolla ve data functionuna  aşağıdaki metotları uyguladk.
                    {
                        const categoryAddAjaxModel = jQuery.parseJSON(data); //datayı JSON'a parse edip categoryAddAjaxModel nesnesine atadık.
                        const newFormBody = $('.modal-body', categoryAddAjaxModel.CategoryAddPartial); //addPartialımızda bulunan modal-body mizi newFormBody nesnemize atadık.
                        placeHolderDiv.find('.modal-body').replaceWith(newFormBody); //modal-bodymizi newfordbody ile eşleştirdik.
                        const isValid = newFormBody.find('[name="IsValid"]').val() === 'True'; //Name içinde isvalid true ise is valide atadık.
                        

                        if (isValid) { // aşağıda ekleyeceğimiz categero için gelecek olan satırın td'lerini yazdık.
                            const newTableRow = `

                                <tr>
                                    <td>${categoryAddAjaxModel.CategoryDto.Category.Id}</td>
                                    <td>${categoryAddAjaxModel.CategoryDto.Category.Name}</td>
                                    <td>${categoryAddAjaxModel.CategoryDto.Category.Description}</td>
                                    <td>${convertFirstLetterToUpperCase(categoryAddAjaxModel.CategoryDto.Category.IsActive)}</td> 
                                    <td>${convertFirstLetterToUpperCase(categoryAddAjaxModel.CategoryDto.Category.IsDeleted)}</td>
                                    <td>${categoryAddAjaxModel.CategoryDto.Category.Note ?? ""}</td>
                                    <td>${convertToShortDate(categoryAddAjaxModel.CategoryDto.Category.CreatedDate)}</td>
                                    <td>${categoryAddAjaxModel.CategoryDto.Category.CreatedByName}</td>
                                </tr>
                                     
                        `;
                            //convertFirstLetterToUpperCase ve convertToShortDate dememizn nedeni kategori eklerken active ve deleted özellikleriin küçük harfle başlaması ve tarihin de uzun yazılmasından dolatı wwwroot klasörümüzün js kısmına js itemi ekleyip kodalrı yazdık burada onu çağırdık.
                        const newTableRowObject =$(newTableRow);
                        newTableRowObject.hide();
                        $('#categoriesTable').append(newTableRowObject);
                        newTableRowObject.fadeIn(3000); //yava yavaş arka planlanda belirginleşmesi
                        //toastr kullanarak uyarı messajları verdik.
                        toastr.success=(`${categoryAddAjaxModel.CategoryDto.Message}`, 'Başarılı');
                            placeHolderDiv.find(".modal").modal('hide');
                            // kategori başarılı oluşursa categoryAddAjaxModeldeki categoryDtodaki message kısmına gider ve başarılı yazdırır. placeholderdivdeki modal'ı bulur ve onu gizler.
                        }else{
                            // addpartialdaki validation summary id'li metot da ul ve li leri birleştirir. ve onlara bulunduğu li deki uyarıyı litext'e atar ve summarytext ile birleştirip gösterir.
                            let summaryText='<br>'; 
                            $('#validation-summary > ul > li').each(function(){
                                let liText=$(this).text()
                                summaryText +=`*${liText}<br><br>`;
                            });
                            toastr.warning(summaryText, 'Dikkat!');
                        }
                        // yukardaki kısmı yazma ndenimiz sağ -üst kısımda yapılan işlemlerin gösterilmesidir.

                    });
                });

            });
        })
    </script>
}

